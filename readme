
  isCustomer(): boolean {
    const role = this.getRole();
    if (!role) {
      alert("Login first!");
      this.router.navigate(['user/login']);
      return false;
    }
    if (role !== Role.Customer) {
      alert("You don't have access");
      return false;
    }
    return true;
  }

  isManager(): boolean {
    const role = this.getRole();
    if (!role) {
      alert("Login first!");
      this.router.navigate(['user/login']);
      return false;
    }
    if (role !== Role.Manager) {
      alert("You don't have access");
      return false;
    }
    return true;
  }

  isAdmin(): boolean {
    const role = this.getRole();
    if (!role) {
      alert("Login first!");
      this.router.navigate(['user/login']);
      return false;
    }
    if (role !== Role.Admin) {
      alert("You don't have access");
      return false;
    }
    return true;
  }
}






import { Injectable } from '@angular/core';
import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';
import { AuthService } from './auth.service';
import { Role } from './role.enum';

@Injectable({
  providedIn: 'root'
})
export class CustomerGuard implements CanActivate {
  constructor(private authService: AuthService, private router: Router) { }

  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {
    return this.authService.isCustomer();
  }
}

